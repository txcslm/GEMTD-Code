//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventSystemsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed class GameEventSystems : Feature {

    public GameEventSystems(Contexts contexts) {
        Add(new AnyAbilityUsingFinishedEventEventSystem(contexts)); // priority: 0
        Add(new CurrentHealthPointsEventSystem(contexts)); // priority: 0
        Add(new AnyGameFinishEventSystem(contexts)); // priority: 0
        Add(new GameLoopStateEnumEventSystem(contexts)); // priority: 0
        Add(new GoldEventSystem(contexts)); // priority: 0
        Add(new HighlightedEventSystem(contexts)); // priority: 0
        Add(new HighlightedRemovedEventSystem(contexts)); // priority: 0
        Add(new LevelEventSystem(contexts)); // priority: 0
        Add(new ProcessingDeathRemovedEventSystem(contexts)); // priority: 0
        Add(new RotationEventSystem(contexts)); // priority: 0
        Add(new RoundEventSystem(contexts)); // priority: 0
        Add(new RoundTimerEventSystem(contexts)); // priority: 0
        Add(new ScaleEventSystem(contexts)); // priority: 0
        Add(new SelectedEventSystem(contexts)); // priority: 0
        Add(new SelectedRemovedEventSystem(contexts)); // priority: 0
        Add(new AnySwapSelectionActiveEventSystem(contexts)); // priority: 0
        Add(new AnySwapSelectionDeactivateEventSystem(contexts)); // priority: 0
        Add(new TotalGameTimeEventSystem(contexts)); // priority: 0
        Add(new WorldPositionEventSystem(contexts)); // priority: 0
    }
}
