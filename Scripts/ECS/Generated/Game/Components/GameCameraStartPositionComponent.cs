//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraStartPosition;

    public static Entitas.IMatcher<GameEntity> CameraStartPosition {
        get {
            if (_matcherCameraStartPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraStartPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraStartPosition = matcher;
            }

            return _matcherCameraStartPosition;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Cameras.CameraStartPositionComponent cameraStartPosition { get { return (Game.Cameras.CameraStartPositionComponent)GetComponent(GameComponentsLookup.CameraStartPosition); } }
    public UnityEngine.Vector3 CameraStartPosition { get { return cameraStartPosition.Value; } }
    public bool hasCameraStartPosition { get { return HasComponent(GameComponentsLookup.CameraStartPosition); } }

    public GameEntity AddCameraStartPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CameraStartPosition;
        var component = (Game.Cameras.CameraStartPositionComponent)CreateComponent(index, typeof(Game.Cameras.CameraStartPositionComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCameraStartPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CameraStartPosition;
        var component = (Game.Cameras.CameraStartPositionComponent)CreateComponent(index, typeof(Game.Cameras.CameraStartPositionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCameraStartPosition() {
        RemoveComponent(GameComponentsLookup.CameraStartPosition);
        return this;
    }
}
