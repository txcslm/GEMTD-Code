//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHealThroneValue;

    public static Entitas.IMatcher<GameEntity> HealThroneValue {
        get {
            if (_matcherHealThroneValue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HealThroneValue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHealThroneValue = matcher;
            }

            return _matcherHealThroneValue;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.PlayerAbility.HealThroneAbility.Comps.HealThroneValue healThroneValue { get { return (Game.PlayerAbility.HealThroneAbility.Comps.HealThroneValue)GetComponent(GameComponentsLookup.HealThroneValue); } }
    public int HealThroneValue { get { return healThroneValue.Value; } }
    public bool hasHealThroneValue { get { return HasComponent(GameComponentsLookup.HealThroneValue); } }

    public GameEntity AddHealThroneValue(int newValue) {
        var index = GameComponentsLookup.HealThroneValue;
        var component = (Game.PlayerAbility.HealThroneAbility.Comps.HealThroneValue)CreateComponent(index, typeof(Game.PlayerAbility.HealThroneAbility.Comps.HealThroneValue));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHealThroneValue(int newValue) {
        var index = GameComponentsLookup.HealThroneValue;
        var component = (Game.PlayerAbility.HealThroneAbility.Comps.HealThroneValue)CreateComponent(index, typeof(Game.PlayerAbility.HealThroneAbility.Comps.HealThroneValue));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHealThroneValue() {
        RemoveComponent(GameComponentsLookup.HealThroneValue);
        return this;
    }
}
