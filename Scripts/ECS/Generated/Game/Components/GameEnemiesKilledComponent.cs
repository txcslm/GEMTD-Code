//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnemiesKilled;

    public static Entitas.IMatcher<GameEntity> EnemiesKilled {
        get {
            if (_matcherEnemiesKilled == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemiesKilled);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnemiesKilled = matcher;
            }

            return _matcherEnemiesKilled;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.KillEnemy.EnemiesKilledComponent enemiesKilled { get { return (Game.KillEnemy.EnemiesKilledComponent)GetComponent(GameComponentsLookup.EnemiesKilled); } }
    public int EnemiesKilled { get { return enemiesKilled.Value; } }
    public bool hasEnemiesKilled { get { return HasComponent(GameComponentsLookup.EnemiesKilled); } }

    public GameEntity AddEnemiesKilled(int newValue) {
        var index = GameComponentsLookup.EnemiesKilled;
        var component = (Game.KillEnemy.EnemiesKilledComponent)CreateComponent(index, typeof(Game.KillEnemy.EnemiesKilledComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnemiesKilled(int newValue) {
        var index = GameComponentsLookup.EnemiesKilled;
        var component = (Game.KillEnemy.EnemiesKilledComponent)CreateComponent(index, typeof(Game.KillEnemy.EnemiesKilledComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnemiesKilled() {
        RemoveComponent(GameComponentsLookup.EnemiesKilled);
        return this;
    }
}
