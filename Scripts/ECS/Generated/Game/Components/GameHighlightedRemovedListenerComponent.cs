//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHighlightedRemovedListener;

    public static Entitas.IMatcher<GameEntity> HighlightedRemovedListener {
        get {
            if (_matcherHighlightedRemovedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HighlightedRemovedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHighlightedRemovedListener = matcher;
            }

            return _matcherHighlightedRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddHighlightedRemovedListener(IHighlightedRemovedListener value) {
        var listeners = hasHighlightedRemovedListener
            ? highlightedRemovedListener.value
            : new System.Collections.Generic.List<IHighlightedRemovedListener>();
        listeners.Add(value);
        ReplaceHighlightedRemovedListener(listeners);
    }

    public void RemoveHighlightedRemovedListener(IHighlightedRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = highlightedRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveHighlightedRemovedListener();
        } else {
            ReplaceHighlightedRemovedListener(listeners);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HighlightedRemovedListenerComponent highlightedRemovedListener { get { return (HighlightedRemovedListenerComponent)GetComponent(GameComponentsLookup.HighlightedRemovedListener); } }
    public bool hasHighlightedRemovedListener { get { return HasComponent(GameComponentsLookup.HighlightedRemovedListener); } }

    public GameEntity AddHighlightedRemovedListener(System.Collections.Generic.List<IHighlightedRemovedListener> newValue) {
        var index = GameComponentsLookup.HighlightedRemovedListener;
        var component = (HighlightedRemovedListenerComponent)CreateComponent(index, typeof(HighlightedRemovedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHighlightedRemovedListener(System.Collections.Generic.List<IHighlightedRemovedListener> newValue) {
        var index = GameComponentsLookup.HighlightedRemovedListener;
        var component = (HighlightedRemovedListenerComponent)CreateComponent(index, typeof(HighlightedRemovedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHighlightedRemovedListener() {
        RemoveComponent(GameComponentsLookup.HighlightedRemovedListener);
        return this;
    }
}
