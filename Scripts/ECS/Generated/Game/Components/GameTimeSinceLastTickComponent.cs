//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimeSinceLastTick;

    public static Entitas.IMatcher<GameEntity> TimeSinceLastTick {
        get {
            if (_matcherTimeSinceLastTick == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TimeSinceLastTick);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimeSinceLastTick = matcher;
            }

            return _matcherTimeSinceLastTick;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Battle.TimeSinceLastTickComponent timeSinceLastTick { get { return (Game.Battle.TimeSinceLastTickComponent)GetComponent(GameComponentsLookup.TimeSinceLastTick); } }
    public float TimeSinceLastTick { get { return timeSinceLastTick.Value; } }
    public bool hasTimeSinceLastTick { get { return HasComponent(GameComponentsLookup.TimeSinceLastTick); } }

    public GameEntity AddTimeSinceLastTick(float newValue) {
        var index = GameComponentsLookup.TimeSinceLastTick;
        var component = (Game.Battle.TimeSinceLastTickComponent)CreateComponent(index, typeof(Game.Battle.TimeSinceLastTickComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTimeSinceLastTick(float newValue) {
        var index = GameComponentsLookup.TimeSinceLastTick;
        var component = (Game.Battle.TimeSinceLastTickComponent)CreateComponent(index, typeof(Game.Battle.TimeSinceLastTickComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTimeSinceLastTick() {
        RemoveComponent(GameComponentsLookup.TimeSinceLastTick);
        return this;
    }
}
