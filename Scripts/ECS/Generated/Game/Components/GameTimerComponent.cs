//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimer;

    public static Entitas.IMatcher<GameEntity> Timer {
        get {
            if (_matcherTimer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Timer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimer = matcher;
            }

            return _matcherTimer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Timers.TimerComponent timer { get { return (Game.Timers.TimerComponent)GetComponent(GameComponentsLookup.Timer); } }
    public float Timer { get { return timer.Value; } }
    public bool hasTimer { get { return HasComponent(GameComponentsLookup.Timer); } }

    public GameEntity AddTimer(float newValue) {
        var index = GameComponentsLookup.Timer;
        var component = (Game.Timers.TimerComponent)CreateComponent(index, typeof(Game.Timers.TimerComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTimer(float newValue) {
        var index = GameComponentsLookup.Timer;
        var component = (Game.Timers.TimerComponent)CreateComponent(index, typeof(Game.Timers.TimerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTimer() {
        RemoveComponent(GameComponentsLookup.Timer);
        return this;
    }
}
