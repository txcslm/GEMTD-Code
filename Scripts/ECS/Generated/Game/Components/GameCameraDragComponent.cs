//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraDrag;

    public static Entitas.IMatcher<GameEntity> CameraDrag {
        get {
            if (_matcherCameraDrag == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraDrag);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraDrag = matcher;
            }

            return _matcherCameraDrag;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Cameras.CameraDragComponent cameraDrag { get { return (Game.Cameras.CameraDragComponent)GetComponent(GameComponentsLookup.CameraDrag); } }
    public UnityEngine.Vector3 CameraDrag { get { return cameraDrag.Value; } }
    public bool hasCameraDrag { get { return HasComponent(GameComponentsLookup.CameraDrag); } }

    public GameEntity AddCameraDrag(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CameraDrag;
        var component = (Game.Cameras.CameraDragComponent)CreateComponent(index, typeof(Game.Cameras.CameraDragComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCameraDrag(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CameraDrag;
        var component = (Game.Cameras.CameraDragComponent)CreateComponent(index, typeof(Game.Cameras.CameraDragComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCameraDrag() {
        RemoveComponent(GameComponentsLookup.CameraDrag);
        return this;
    }
}
