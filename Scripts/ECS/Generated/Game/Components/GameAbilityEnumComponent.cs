//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAbilityEnum;

    public static Entitas.IMatcher<GameEntity> AbilityEnum {
        get {
            if (_matcherAbilityEnum == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AbilityEnum);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAbilityEnum = matcher;
            }

            return _matcherAbilityEnum;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Battle.AbilityEnumComponent abilityEnum { get { return (Game.Battle.AbilityEnumComponent)GetComponent(GameComponentsLookup.AbilityEnum); } }
    public Game.Battle.AbilityEnum AbilityEnum { get { return abilityEnum.Value; } }
    public bool hasAbilityEnum { get { return HasComponent(GameComponentsLookup.AbilityEnum); } }

    public GameEntity AddAbilityEnum(Game.Battle.AbilityEnum newValue) {
        var index = GameComponentsLookup.AbilityEnum;
        var component = (Game.Battle.AbilityEnumComponent)CreateComponent(index, typeof(Game.Battle.AbilityEnumComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAbilityEnum(Game.Battle.AbilityEnum newValue) {
        var index = GameComponentsLookup.AbilityEnum;
        var component = (Game.Battle.AbilityEnumComponent)CreateComponent(index, typeof(Game.Battle.AbilityEnumComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAbilityEnum() {
        RemoveComponent(GameComponentsLookup.AbilityEnum);
        return this;
    }
}
