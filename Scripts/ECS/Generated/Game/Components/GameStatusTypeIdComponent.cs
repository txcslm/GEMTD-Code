//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStatusTypeId;

    public static Entitas.IMatcher<GameEntity> StatusTypeId {
        get {
            if (_matcherStatusTypeId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StatusTypeId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStatusTypeId = matcher;
            }

            return _matcherStatusTypeId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Battle.StatusTypeIdComponent statusTypeId { get { return (Game.Battle.StatusTypeIdComponent)GetComponent(GameComponentsLookup.StatusTypeId); } }
    public Game.Battle.StatusEnum StatusTypeId { get { return statusTypeId.Value; } }
    public bool hasStatusTypeId { get { return HasComponent(GameComponentsLookup.StatusTypeId); } }

    public GameEntity AddStatusTypeId(Game.Battle.StatusEnum newValue) {
        var index = GameComponentsLookup.StatusTypeId;
        var component = (Game.Battle.StatusTypeIdComponent)CreateComponent(index, typeof(Game.Battle.StatusTypeIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceStatusTypeId(Game.Battle.StatusEnum newValue) {
        var index = GameComponentsLookup.StatusTypeId;
        var component = (Game.Battle.StatusTypeIdComponent)CreateComponent(index, typeof(Game.Battle.StatusTypeIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveStatusTypeId() {
        RemoveComponent(GameComponentsLookup.StatusTypeId);
        return this;
    }
}
