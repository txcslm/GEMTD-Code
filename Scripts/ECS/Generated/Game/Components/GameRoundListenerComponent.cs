//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRoundListener;

    public static Entitas.IMatcher<GameEntity> RoundListener {
        get {
            if (_matcherRoundListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RoundListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRoundListener = matcher;
            }

            return _matcherRoundListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddRoundListener(IRoundListener value) {
        var listeners = hasRoundListener
            ? roundListener.value
            : new System.Collections.Generic.List<IRoundListener>();
        listeners.Add(value);
        ReplaceRoundListener(listeners);
    }

    public void RemoveRoundListener(IRoundListener value, bool removeComponentWhenEmpty = true) {
        var listeners = roundListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveRoundListener();
        } else {
            ReplaceRoundListener(listeners);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RoundListenerComponent roundListener { get { return (RoundListenerComponent)GetComponent(GameComponentsLookup.RoundListener); } }
    public bool hasRoundListener { get { return HasComponent(GameComponentsLookup.RoundListener); } }

    public GameEntity AddRoundListener(System.Collections.Generic.List<IRoundListener> newValue) {
        var index = GameComponentsLookup.RoundListener;
        var component = (RoundListenerComponent)CreateComponent(index, typeof(RoundListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceRoundListener(System.Collections.Generic.List<IRoundListener> newValue) {
        var index = GameComponentsLookup.RoundListener;
        var component = (RoundListenerComponent)CreateComponent(index, typeof(RoundListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveRoundListener() {
        RemoveComponent(GameComponentsLookup.RoundListener);
        return this;
    }
}
