//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStatusSetups;

    public static Entitas.IMatcher<GameEntity> StatusSetups {
        get {
            if (_matcherStatusSetups == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StatusSetups);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStatusSetups = matcher;
            }

            return _matcherStatusSetups;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Battle.StatusSetupsComponent statusSetups { get { return (Game.Battle.StatusSetupsComponent)GetComponent(GameComponentsLookup.StatusSetups); } }
    public System.Collections.Generic.List<Game.Battle.StatusSetup> StatusSetups { get { return statusSetups.Value; } }
    public bool hasStatusSetups { get { return HasComponent(GameComponentsLookup.StatusSetups); } }

    public GameEntity AddStatusSetups(System.Collections.Generic.List<Game.Battle.StatusSetup> newValue) {
        var index = GameComponentsLookup.StatusSetups;
        var component = (Game.Battle.StatusSetupsComponent)CreateComponent(index, typeof(Game.Battle.StatusSetupsComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceStatusSetups(System.Collections.Generic.List<Game.Battle.StatusSetup> newValue) {
        var index = GameComponentsLookup.StatusSetups;
        var component = (Game.Battle.StatusSetupsComponent)CreateComponent(index, typeof(Game.Battle.StatusSetupsComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveStatusSetups() {
        RemoveComponent(GameComponentsLookup.StatusSetups);
        return this;
    }
}
