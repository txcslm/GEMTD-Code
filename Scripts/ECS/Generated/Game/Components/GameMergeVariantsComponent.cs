//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMergeVariants;

    public static Entitas.IMatcher<GameEntity> MergeVariants {
        get {
            if (_matcherMergeVariants == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MergeVariants);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMergeVariants = matcher;
            }

            return _matcherMergeVariants;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Towers.MergeSpirits.Comps.MergeVariantsComponent mergeVariants { get { return (Game.Towers.MergeSpirits.Comps.MergeVariantsComponent)GetComponent(GameComponentsLookup.MergeVariants); } }
    public System.Collections.Generic.List<Game.Towers.TowerEnum> MergeVariants { get { return mergeVariants.Value; } }
    public bool hasMergeVariants { get { return HasComponent(GameComponentsLookup.MergeVariants); } }

    public GameEntity AddMergeVariants(System.Collections.Generic.List<Game.Towers.TowerEnum> newValue) {
        var index = GameComponentsLookup.MergeVariants;
        var component = (Game.Towers.MergeSpirits.Comps.MergeVariantsComponent)CreateComponent(index, typeof(Game.Towers.MergeSpirits.Comps.MergeVariantsComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMergeVariants(System.Collections.Generic.List<Game.Towers.TowerEnum> newValue) {
        var index = GameComponentsLookup.MergeVariants;
        var component = (Game.Towers.MergeSpirits.Comps.MergeVariantsComponent)CreateComponent(index, typeof(Game.Towers.MergeSpirits.Comps.MergeVariantsComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMergeVariants() {
        RemoveComponent(GameComponentsLookup.MergeVariants);
        return this;
    }
}
