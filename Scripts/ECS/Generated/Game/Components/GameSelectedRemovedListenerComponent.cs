//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSelectedRemovedListener;

    public static Entitas.IMatcher<GameEntity> SelectedRemovedListener {
        get {
            if (_matcherSelectedRemovedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SelectedRemovedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSelectedRemovedListener = matcher;
            }

            return _matcherSelectedRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddSelectedRemovedListener(ISelectedRemovedListener value) {
        var listeners = hasSelectedRemovedListener
            ? selectedRemovedListener.value
            : new System.Collections.Generic.List<ISelectedRemovedListener>();
        listeners.Add(value);
        ReplaceSelectedRemovedListener(listeners);
    }

    public void RemoveSelectedRemovedListener(ISelectedRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = selectedRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSelectedRemovedListener();
        } else {
            ReplaceSelectedRemovedListener(listeners);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SelectedRemovedListenerComponent selectedRemovedListener { get { return (SelectedRemovedListenerComponent)GetComponent(GameComponentsLookup.SelectedRemovedListener); } }
    public bool hasSelectedRemovedListener { get { return HasComponent(GameComponentsLookup.SelectedRemovedListener); } }

    public GameEntity AddSelectedRemovedListener(System.Collections.Generic.List<ISelectedRemovedListener> newValue) {
        var index = GameComponentsLookup.SelectedRemovedListener;
        var component = (SelectedRemovedListenerComponent)CreateComponent(index, typeof(SelectedRemovedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceSelectedRemovedListener(System.Collections.Generic.List<ISelectedRemovedListener> newValue) {
        var index = GameComponentsLookup.SelectedRemovedListener;
        var component = (SelectedRemovedListenerComponent)CreateComponent(index, typeof(SelectedRemovedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveSelectedRemovedListener() {
        RemoveComponent(GameComponentsLookup.SelectedRemovedListener);
        return this;
    }
}
