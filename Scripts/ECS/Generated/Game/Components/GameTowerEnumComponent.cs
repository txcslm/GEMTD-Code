//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTowerEnum;

    public static Entitas.IMatcher<GameEntity> TowerEnum {
        get {
            if (_matcherTowerEnum == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TowerEnum);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTowerEnum = matcher;
            }

            return _matcherTowerEnum;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Towers.TowerEnumComponent towerEnum { get { return (Game.Towers.TowerEnumComponent)GetComponent(GameComponentsLookup.TowerEnum); } }
    public Game.Towers.TowerEnum TowerEnum { get { return towerEnum.Value; } }
    public bool hasTowerEnum { get { return HasComponent(GameComponentsLookup.TowerEnum); } }

    public GameEntity AddTowerEnum(Game.Towers.TowerEnum newValue) {
        var index = GameComponentsLookup.TowerEnum;
        var component = (Game.Towers.TowerEnumComponent)CreateComponent(index, typeof(Game.Towers.TowerEnumComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTowerEnum(Game.Towers.TowerEnum newValue) {
        var index = GameComponentsLookup.TowerEnum;
        var component = (Game.Towers.TowerEnumComponent)CreateComponent(index, typeof(Game.Towers.TowerEnumComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTowerEnum() {
        RemoveComponent(GameComponentsLookup.TowerEnum);
        return this;
    }
}
